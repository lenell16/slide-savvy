/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/8AOIxTwrPOy
 */
import {
  CardContent,
  CardTitle,
  CardHeader,
  CardFooter,
  Card,
} from "@/components/ui/card";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import { JSX, SVGProps } from "react";
import { drive_v3 } from "googleapis";
import { format } from "date-fns";

export default function PresentationCard(props: drive_v3.Schema$File) {
  let owner = props.lastModifyingUser?.displayName ?? "Unknown";

  if (props.lastModifyingUser?.me) {
    owner = "me";
  }

  return (
    <Card className="w-full flex flex-col">
      <img
        alt="Intl.MessageFormat Thumbnail"
        className="w-full h-full object-cover"
        height={200}
        src={props.thumbnailLink!}
        width={350}
      />
      <CardHeader>
        <CardTitle className="truncate">{props.name}</CardTitle>
      </CardHeader>
      <CardContent className="flex flex-col gap-2">
        <div className="flex items-center gap-2">
          <Switch id="extract-slide-notes" />
          <Label htmlFor="extract-slide-notes">Extract Slide Notes</Label>
        </div>
        <div className="flex items-center gap-2">
          <Switch id="extract-slide-content" />
          <Label htmlFor="extract-slide-content">Extract Slide Content</Label>
        </div>
      </CardContent>
      <CardFooter className="flex justify-between items-center">
        <div className="flex items-center">
          {props.shared && <UserIcon className="w-4 h-4 mr-2" />}
          <p className="text-sm">{owner}</p>
        </div>
        <p className="text-sm">
          {format(new Date(props.viewedByMeTime!), "MM/dd/yyyy")}
        </p>
      </CardFooter>
    </Card>
  );
}

function UserIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>
  );
}
